{
	"id": "8e4263fb04a79c07c1352e17c4da23b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/01-8 enumTask1.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\ncontract Enum{\r\nenum Exam{\r\nChecking,\r\nPass,\r\nFail,\r\nScholarship\r\n}\r\n\r\nExam public e1;\r\n function Pass() public{\r\n if(e1 == Exam.Checking){\r\n e1 = Exam.Pass;\r\n //e1 = Exam(2); can also be used\r\n }}\r\n function Fail()public {\r\nif(e1==Exam.Checking){\r\ne1=Exam.Fail;\r\n}}\r\nfunction Scholarships() public {\r\nif(e1==Exam.Pass){\r\n    e1=Exam.Scholarship;\r\n}\r\n}\r\nfunction idelete()public {\r\n    delete e1;\r\n}\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/01-8 enumTask1.sol": {
				"Enum": {
					"abi": [
						{
							"inputs": [],
							"name": "Fail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Pass",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Scholarships",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "e1",
							"outputs": [
								{
									"internalType": "enum Enum.Exam",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "idelete",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/01-8 enumTask1.sol\":58:462  contract Enum{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/01-8 enumTask1.sol\":58:462  contract Enum{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2ac279af\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x552670ff\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x60595433\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa2c2d666\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xea70a017\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/01-8 enumTask1.sol\":326:410  function Scholarships() public {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/01-8 enumTask1.sol\":258:324  function Fail()public {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/01-8 enumTask1.sol\":147:255  function Pass() public{... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/01-8 enumTask1.sol\":129:143  Exam public e1 */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01-8 enumTask1.sol\":412:457  function idelete()public {... */\n    tag_7:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/01-8 enumTask1.sol\":326:410  function Scholarships() public {... */\n    tag_9:\n        /* \"contracts/01-8 enumTask1.sol\":367:376  Exam.Pass */\n      0x01\n        /* \"contracts/01-8 enumTask1.sol\":363:376  e1==Exam.Pass */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n    tag_21:\n        /* \"contracts/01-8 enumTask1.sol\":363:365  e1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/01-8 enumTask1.sol\":363:376  e1==Exam.Pass */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      tag_25\n      tag_23\n      jump\t// in\n    tag_25:\n    tag_24:\n      sub\n        /* \"contracts/01-8 enumTask1.sol\":360:407  if(e1==Exam.Pass){... */\n      tag_26\n      jumpi\n        /* \"contracts/01-8 enumTask1.sol\":387:403  Exam.Scholarship */\n      0x03\n        /* \"contracts/01-8 enumTask1.sol\":384:386  e1 */\n      0x00\n      dup1\n        /* \"contracts/01-8 enumTask1.sol\":384:403  e1=Exam.Scholarship */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      tag_28\n      tag_23\n      jump\t// in\n    tag_28:\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/01-8 enumTask1.sol\":360:407  if(e1==Exam.Pass){... */\n    tag_26:\n        /* \"contracts/01-8 enumTask1.sol\":326:410  function Scholarships() public {... */\n      jump\t// out\n        /* \"contracts/01-8 enumTask1.sol\":258:324  function Fail()public {... */\n    tag_11:\n        /* \"contracts/01-8 enumTask1.sol\":290:303  Exam.Checking */\n      0x00\n        /* \"contracts/01-8 enumTask1.sol\":286:303  e1==Exam.Checking */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_23\n      jump\t// in\n    tag_31:\n    tag_30:\n        /* \"contracts/01-8 enumTask1.sol\":286:288  e1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/01-8 enumTask1.sol\":286:303  e1==Exam.Checking */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      tag_33\n      tag_23\n      jump\t// in\n    tag_33:\n    tag_32:\n      sub\n        /* \"contracts/01-8 enumTask1.sol\":283:323  if(e1==Exam.Checking){... */\n      tag_34\n      jumpi\n        /* \"contracts/01-8 enumTask1.sol\":310:319  Exam.Fail */\n      0x02\n        /* \"contracts/01-8 enumTask1.sol\":307:309  e1 */\n      0x00\n      dup1\n        /* \"contracts/01-8 enumTask1.sol\":307:319  e1=Exam.Fail */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      tag_36\n      tag_23\n      jump\t// in\n    tag_36:\n    tag_35:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/01-8 enumTask1.sol\":283:323  if(e1==Exam.Checking){... */\n    tag_34:\n        /* \"contracts/01-8 enumTask1.sol\":258:324  function Fail()public {... */\n      jump\t// out\n        /* \"contracts/01-8 enumTask1.sol\":147:255  function Pass() public{... */\n    tag_13:\n        /* \"contracts/01-8 enumTask1.sol\":182:195  Exam.Checking */\n      0x00\n        /* \"contracts/01-8 enumTask1.sol\":176:195  e1 == Exam.Checking */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_38\n      jumpi\n      tag_39\n      tag_23\n      jump\t// in\n    tag_39:\n    tag_38:\n        /* \"contracts/01-8 enumTask1.sol\":176:178  e1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/01-8 enumTask1.sol\":176:195  e1 == Exam.Checking */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      tag_41\n      tag_23\n      jump\t// in\n    tag_41:\n    tag_40:\n      sub\n        /* \"contracts/01-8 enumTask1.sol\":173:254  if(e1 == Exam.Checking){... */\n      tag_42\n      jumpi\n        /* \"contracts/01-8 enumTask1.sol\":205:214  Exam.Pass */\n      0x01\n        /* \"contracts/01-8 enumTask1.sol\":200:202  e1 */\n      0x00\n      dup1\n        /* \"contracts/01-8 enumTask1.sol\":200:214  e1 = Exam.Pass */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      tag_44\n      tag_23\n      jump\t// in\n    tag_44:\n    tag_43:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/01-8 enumTask1.sol\":173:254  if(e1 == Exam.Checking){... */\n    tag_42:\n        /* \"contracts/01-8 enumTask1.sol\":147:255  function Pass() public{... */\n      jump\t// out\n        /* \"contracts/01-8 enumTask1.sol\":129:143  Exam public e1 */\n    tag_15:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/01-8 enumTask1.sol\":412:457  function idelete()public {... */\n    tag_19:\n        /* \"contracts/01-8 enumTask1.sol\":451:453  e1 */\n      0x00\n      dup1\n        /* \"contracts/01-8 enumTask1.sol\":444:453  delete e1 */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/01-8 enumTask1.sol\":412:457  function idelete()public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_23:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x21\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:304   */\n    tag_46:\n        /* \"#utility.yul\":272:273   */\n      0x04\n        /* \"#utility.yul\":265:270   */\n      dup2\n        /* \"#utility.yul\":262:274   */\n      lt\n        /* \"#utility.yul\":252:298   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":278:296   */\n      tag_54\n      tag_23\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":252:298   */\n    tag_53:\n        /* \"#utility.yul\":193:304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":310:433   */\n    tag_47:\n        /* \"#utility.yul\":353:360   */\n      0x00\n        /* \"#utility.yul\":382:387   */\n      dup2\n        /* \"#utility.yul\":371:387   */\n      swap1\n      pop\n        /* \"#utility.yul\":388:427   */\n      tag_56\n        /* \"#utility.yul\":421:426   */\n      dup3\n        /* \"#utility.yul\":388:427   */\n      tag_46\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":310:433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":439:562   */\n    tag_48:\n        /* \"#utility.yul\":493:502   */\n      0x00\n        /* \"#utility.yul\":526:556   */\n      tag_58\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":526:556   */\n      tag_47\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":513:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":439:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:707   */\n    tag_49:\n        /* \"#utility.yul\":659:700   */\n      tag_60\n        /* \"#utility.yul\":694:699   */\n      dup2\n        /* \"#utility.yul\":659:700   */\n      tag_48\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":654:657   */\n      dup3\n        /* \"#utility.yul\":647:701   */\n      mstore\n        /* \"#utility.yul\":568:707   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":713:943   */\n    tag_17:\n        /* \"#utility.yul\":810:814   */\n      0x00\n        /* \"#utility.yul\":848:850   */\n      0x20\n        /* \"#utility.yul\":837:846   */\n      dup3\n        /* \"#utility.yul\":833:851   */\n      add\n        /* \"#utility.yul\":825:851   */\n      swap1\n      pop\n        /* \"#utility.yul\":861:936   */\n      tag_62\n        /* \"#utility.yul\":933:934   */\n      0x00\n        /* \"#utility.yul\":922:931   */\n      dup4\n        /* \"#utility.yul\":918:935   */\n      add\n        /* \"#utility.yul\":909:915   */\n      dup5\n        /* \"#utility.yul\":861:936   */\n      tag_49\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":713:943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207473ca3292ea24f77a825b35563d12c0957d3d51b5391469c929573ae707da9364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632ac279af1461005c578063552670ff146100665780636059543314610070578063a2c2d6661461007a578063ea70a01714610098575b600080fd5b6100646100a2565b005b61006e610108565b005b61007861016e565b005b6100826101d4565b60405161008f919061026f565b60405180910390f35b6100a06101e5565b005b600160038111156100b6576100b56101f8565b5b60008054906101000a900460ff1660038111156100d6576100d56101f8565b5b036101065760036000806101000a81548160ff02191690836003811115610100576100ff6101f8565b5b02179055505b565b6000600381111561011c5761011b6101f8565b5b60008054906101000a900460ff16600381111561013c5761013b6101f8565b5b0361016c5760026000806101000a81548160ff02191690836003811115610166576101656101f8565b5b02179055505b565b60006003811115610182576101816101f8565b5b60008054906101000a900460ff1660038111156101a2576101a16101f8565b5b036101d25760016000806101000a81548160ff021916908360038111156101cc576101cb6101f8565b5b02179055505b565b60008054906101000a900460ff1681565b6000806101000a81549060ff0219169055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610238576102376101f8565b5b50565b600081905061024982610227565b919050565b60006102598261023b565b9050919050565b6102698161024e565b82525050565b60006020820190506102846000830184610260565b9291505056fea26469706673582212207473ca3292ea24f77a825b35563d12c0957d3d51b5391469c929573ae707da9364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2AC279AF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x552670FF EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x60595433 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xA2C2D666 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xEA70A017 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB6 JUMPI PUSH2 0xB5 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD6 JUMPI PUSH2 0xD5 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x106 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11B PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C JUMPI PUSH2 0x13B PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16C JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH2 0x165 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH2 0x181 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A2 JUMPI PUSH2 0x1A1 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D2 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x238 JUMPI PUSH2 0x237 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x249 DUP3 PUSH2 0x227 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x23B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x73CA3292EA24F77A825B35563D12C0957D3D51B539 EQ PUSH10 0xC929573AE707DA936473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "58:404:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Fail_39": {
									"entryPoint": 264,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Pass_24": {
									"entryPoint": 366,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Scholarships_54": {
									"entryPoint": 162,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@e1_9": {
									"entryPoint": 468,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@idelete_61": {
									"entryPoint": 485,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Exam_$6_to_t_uint8_fromStack": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_Exam_$6__to_t_uint8__fromStack_reversed": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Exam_$6": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Exam_$6_to_t_uint8": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Exam_$6": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:946:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "242:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "276:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "278:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "278:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "278:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "265:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "272:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "262:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "262:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "255:20:1"
															},
															"nodeType": "YulIf",
															"src": "252:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Exam_$6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "235:5:1",
														"type": ""
													}
												],
												"src": "193:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "361:72:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "371:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "382:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "371:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "421:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Exam_$6",
																	"nodeType": "YulIdentifier",
																	"src": "388:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "388:39:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Exam_$6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "343:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "353:7:1",
														"type": ""
													}
												],
												"src": "310:123:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:59:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:43:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Exam_$6",
																	"nodeType": "YulIdentifier",
																	"src": "526:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:30:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "513:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Exam_$6_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "483:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "493:9:1",
														"type": ""
													}
												],
												"src": "439:123:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "637:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "654:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "694:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Exam_$6_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "659:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:41:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "647:54:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Exam_$6_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "625:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "632:3:1",
														"type": ""
													}
												],
												"src": "568:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "815:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "825:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "825:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "909:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "933:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "918:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Exam_$6_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "861:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:75:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Exam_$6__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "787:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "799:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "810:4:1",
														"type": ""
													}
												],
												"src": "713:230:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Exam_$6(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Exam_$6(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Exam_$6(value)\n    }\n\n    function convert_t_enum$_Exam_$6_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Exam_$6(value)\n    }\n\n    function abi_encode_t_enum$_Exam_$6_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Exam_$6_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Exam_$6__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Exam_$6_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80632ac279af1461005c578063552670ff146100665780636059543314610070578063a2c2d6661461007a578063ea70a01714610098575b600080fd5b6100646100a2565b005b61006e610108565b005b61007861016e565b005b6100826101d4565b60405161008f919061026f565b60405180910390f35b6100a06101e5565b005b600160038111156100b6576100b56101f8565b5b60008054906101000a900460ff1660038111156100d6576100d56101f8565b5b036101065760036000806101000a81548160ff02191690836003811115610100576100ff6101f8565b5b02179055505b565b6000600381111561011c5761011b6101f8565b5b60008054906101000a900460ff16600381111561013c5761013b6101f8565b5b0361016c5760026000806101000a81548160ff02191690836003811115610166576101656101f8565b5b02179055505b565b60006003811115610182576101816101f8565b5b60008054906101000a900460ff1660038111156101a2576101a16101f8565b5b036101d25760016000806101000a81548160ff021916908360038111156101cc576101cb6101f8565b5b02179055505b565b60008054906101000a900460ff1681565b6000806101000a81549060ff0219169055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610238576102376101f8565b5b50565b600081905061024982610227565b919050565b60006102598261023b565b9050919050565b6102698161024e565b82525050565b60006020820190506102846000830184610260565b9291505056fea26469706673582212207473ca3292ea24f77a825b35563d12c0957d3d51b5391469c929573ae707da9364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2AC279AF EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x552670FF EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x60595433 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xA2C2D666 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xEA70A017 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x108 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x16E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1E5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB6 JUMPI PUSH2 0xB5 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD6 JUMPI PUSH2 0xD5 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x106 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11B PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C JUMPI PUSH2 0x13B PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16C JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH2 0x165 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH2 0x181 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A2 JUMPI PUSH2 0x1A1 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D2 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x238 JUMPI PUSH2 0x237 PUSH2 0x1F8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x249 DUP3 PUSH2 0x227 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x23B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x73CA3292EA24F77A825B35563D12C0957D3D51B539 EQ PUSH10 0xC929573AE707DA936473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "58:404:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:84;;;:::i;:::-;;258:66;;;:::i;:::-;;147:108;;;:::i;:::-;;129:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:45;;;:::i;:::-;;326:84;367:9;363:13;;;;;;;;:::i;:::-;;:2;;;;;;;;;;:13;;;;;;;;:::i;:::-;;;360:47;;387:16;384:2;;:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;360:47;326:84::o;258:66::-;290:13;286:17;;;;;;;;:::i;:::-;;:2;;;;;;;;;;:17;;;;;;;;:::i;:::-;;;283:40;;310:9;307:2;;:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;283:40;258:66::o;147:108::-;182:13;176:19;;;;;;;;:::i;:::-;;:2;;;;;;;;;;:19;;;;;;;;:::i;:::-;;;173:81;;205:9;200:2;;:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;173:81;147:108::o;129:14::-;;;;;;;;;;;;:::o;412:45::-;451:2;;444:9;;;;;;;;;;;412:45::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:111;272:1;265:5;262:12;252:46;;278:18;;:::i;:::-;252:46;193:111;:::o;310:123::-;353:7;382:5;371:16;;388:39;421:5;388:39;:::i;:::-;310:123;;;:::o;439:::-;493:9;526:30;550:5;526:30;:::i;:::-;513:43;;439:123;;;:::o;568:139::-;659:41;694:5;659:41;:::i;:::-;654:3;647:54;568:139;;:::o;713:230::-;810:4;848:2;837:9;833:18;825:26;;861:75;933:1;922:9;918:17;909:6;861:75;:::i;:::-;713:230;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "140800",
								"executionCost": "183",
								"totalCost": "140983"
							},
							"external": {
								"Fail()": "26639",
								"Pass()": "26661",
								"Scholarships()": "26617",
								"e1()": "2601",
								"idelete()": "24452"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 462,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 462,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207473ca3292ea24f77a825b35563d12c0957d3d51b5391469c929573ae707da9364736f6c63430008110033",
									".code": [
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "2AC279AF"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "552670FF"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "60595433"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "A2C2D666"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "EA70A017"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 326,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 326,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 326,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 326,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 410,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 324,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 324,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 324,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 255,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 147,
											"end": 255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 147,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 147,
											"end": 255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 255,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 147,
											"end": 255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 255,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 129,
											"end": 143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 129,
											"end": 143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 412,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 412,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 412,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 412,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 412,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 412,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 412,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 412,
											"end": 457,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 363,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 363,
											"end": 365,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 365,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 363,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 363,
											"end": 365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 363,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 360,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 360,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 387,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 384,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 384,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 360,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 324,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 286,
											"end": 288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 288,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 286,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 286,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 286,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 283,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 283,
											"end": 323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 310,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 307,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 307,
											"end": 319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 323,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 283,
											"end": 323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 255,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 147,
											"end": 255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 176,
											"end": 195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 176,
											"end": 178,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 178,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 176,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 176,
											"end": 178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 176,
											"end": 195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 173,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 173,
											"end": 254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 200,
											"end": 214,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 200,
											"end": 214,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 200,
											"end": 214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 200,
											"end": 214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 200,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 200,
											"end": 214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 200,
											"end": 214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 200,
											"end": 214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 173,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 129,
											"end": 143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 129,
											"end": 143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 412,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 412,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 444,
											"end": 453,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 444,
											"end": 453,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 453,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 412,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 304,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 193,
											"end": 304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 272,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 265,
											"end": 270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 274,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 252,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 252,
											"end": 298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 278,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 278,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 278,
											"end": 296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 278,
											"end": 296,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 278,
											"end": 296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 298,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 252,
											"end": 298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 310,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 371,
											"end": 387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 388,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 421,
											"end": 426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 388,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 388,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 388,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 388,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 439,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 439,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 526,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 526,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 526,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 526,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 513,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 439,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 439,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 439,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 568,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 659,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 659,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 700,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 659,
											"end": 700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 568,
											"end": 707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 810,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 825,
											"end": 851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 825,
											"end": 851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 861,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 933,
											"end": 934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 918,
											"end": 935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 861,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 861,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 861,
											"end": 936,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 861,
											"end": 936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 713,
											"end": 943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/01-8 enumTask1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Fail()": "552670ff",
							"Pass()": "60595433",
							"Scholarships()": "2ac279af",
							"e1()": "a2c2d666",
							"idelete()": "ea70a017"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Fail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Pass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Scholarships\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"e1\",\"outputs\":[{\"internalType\":\"enum Enum.Exam\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"idelete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/01-8 enumTask1.sol\":\"Enum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/01-8 enumTask1.sol\":{\"keccak256\":\"0x4a1b97d6aa7098b1ece546d54625bc7d435d5ec4b30316115bd202efab47dd64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6147ee266e2ba159a39ca797e39b1fbc5427c5218a4219af4510a01e30b2adf7\",\"dweb:/ipfs/QmTbUabwXBNt5t7Vh2Ngse4ddHX7hdDpWz79BpspqgHfEP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "contracts/01-8 enumTask1.sol:Enum",
								"label": "e1",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Exam)6"
							}
						],
						"types": {
							"t_enum(Exam)6": {
								"encoding": "inplace",
								"label": "enum Enum.Exam",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/01-8 enumTask1.sol": {
				"ast": {
					"absolutePath": "contracts/01-8 enumTask1.sol",
					"exportedSymbols": {
						"Enum": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Enum",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "Enum",
							"nameLocation": "67:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Enum.Exam",
									"id": 6,
									"members": [
										{
											"id": 2,
											"name": "Checking",
											"nameLocation": "86:8:0",
											"nodeType": "EnumValue",
											"src": "86:8:0"
										},
										{
											"id": 3,
											"name": "Pass",
											"nameLocation": "97:4:0",
											"nodeType": "EnumValue",
											"src": "97:4:0"
										},
										{
											"id": 4,
											"name": "Fail",
											"nameLocation": "104:4:0",
											"nodeType": "EnumValue",
											"src": "104:4:0"
										},
										{
											"id": 5,
											"name": "Scholarship",
											"nameLocation": "111:11:0",
											"nodeType": "EnumValue",
											"src": "111:11:0"
										}
									],
									"name": "Exam",
									"nameLocation": "79:4:0",
									"nodeType": "EnumDefinition",
									"src": "74:51:0"
								},
								{
									"constant": false,
									"functionSelector": "a2c2d666",
									"id": 9,
									"mutability": "mutable",
									"name": "e1",
									"nameLocation": "141:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "129:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Exam_$6",
										"typeString": "enum Enum.Exam"
									},
									"typeName": {
										"id": 8,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 7,
											"name": "Exam",
											"nameLocations": [
												"129:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 6,
											"src": "129:4:0"
										},
										"referencedDeclaration": 6,
										"src": "129:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Exam_$6",
											"typeString": "enum Enum.Exam"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "169:86:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Exam_$6",
														"typeString": "enum Enum.Exam"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "e1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "176:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$6",
															"typeString": "enum Enum.Exam"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 13,
															"name": "Exam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "182:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Exam_$6_$",
																"typeString": "type(enum Enum.Exam)"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "187:8:0",
														"memberName": "Checking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2,
														"src": "182:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$6",
															"typeString": "enum Enum.Exam"
														}
													},
													"src": "176:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 22,
												"nodeType": "IfStatement",
												"src": "173:81:0",
												"trueBody": {
													"id": 21,
													"nodeType": "Block",
													"src": "196:58:0",
													"statements": [
														{
															"expression": {
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 16,
																	"name": "e1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "200:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Exam_$6",
																		"typeString": "enum Enum.Exam"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 17,
																		"name": "Exam",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "205:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Exam_$6_$",
																			"typeString": "type(enum Enum.Exam)"
																		}
																	},
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "210:4:0",
																	"memberName": "Pass",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "205:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Exam_$6",
																		"typeString": "enum Enum.Exam"
																	}
																},
																"src": "200:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Exam_$6",
																	"typeString": "enum Enum.Exam"
																}
															},
															"id": 20,
															"nodeType": "ExpressionStatement",
															"src": "200:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "60595433",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Pass",
									"nameLocation": "156:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "169:0:0"
									},
									"scope": 62,
									"src": "147:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "280:44:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Exam_$6",
														"typeString": "enum Enum.Exam"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 27,
														"name": "e1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "286:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$6",
															"typeString": "enum Enum.Exam"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 28,
															"name": "Exam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "290:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Exam_$6_$",
																"typeString": "type(enum Enum.Exam)"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "295:8:0",
														"memberName": "Checking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2,
														"src": "290:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$6",
															"typeString": "enum Enum.Exam"
														}
													},
													"src": "286:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "283:40:0",
												"trueBody": {
													"id": 36,
													"nodeType": "Block",
													"src": "304:19:0",
													"statements": [
														{
															"expression": {
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 31,
																	"name": "e1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "307:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Exam_$6",
																		"typeString": "enum Enum.Exam"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 32,
																		"name": "Exam",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "310:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Exam_$6_$",
																			"typeString": "type(enum Enum.Exam)"
																		}
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "315:4:0",
																	"memberName": "Fail",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "310:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Exam_$6",
																		"typeString": "enum Enum.Exam"
																	}
																},
																"src": "307:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Exam_$6",
																	"typeString": "enum Enum.Exam"
																}
															},
															"id": 35,
															"nodeType": "ExpressionStatement",
															"src": "307:12:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "552670ff",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Fail",
									"nameLocation": "267:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:0:0"
									},
									"scope": 62,
									"src": "258:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "357:53:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Exam_$6",
														"typeString": "enum Enum.Exam"
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 42,
														"name": "e1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "363:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$6",
															"typeString": "enum Enum.Exam"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 43,
															"name": "Exam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Exam_$6_$",
																"typeString": "type(enum Enum.Exam)"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "372:4:0",
														"memberName": "Pass",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "367:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$6",
															"typeString": "enum Enum.Exam"
														}
													},
													"src": "363:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "360:47:0",
												"trueBody": {
													"id": 51,
													"nodeType": "Block",
													"src": "377:30:0",
													"statements": [
														{
															"expression": {
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 46,
																	"name": "e1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "384:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Exam_$6",
																		"typeString": "enum Enum.Exam"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 47,
																		"name": "Exam",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "387:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Exam_$6_$",
																			"typeString": "type(enum Enum.Exam)"
																		}
																	},
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "392:11:0",
																	"memberName": "Scholarship",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "387:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Exam_$6",
																		"typeString": "enum Enum.Exam"
																	}
																},
																"src": "384:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Exam_$6",
																	"typeString": "enum Enum.Exam"
																}
															},
															"id": 50,
															"nodeType": "ExpressionStatement",
															"src": "384:19:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2ac279af",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Scholarships",
									"nameLocation": "335:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:0:0"
									},
									"scope": 62,
									"src": "326:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "437:20:0",
										"statements": [
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "444:9:0",
													"subExpression": {
														"id": 57,
														"name": "e1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "451:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Exam_$6",
															"typeString": "enum Enum.Exam"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "444:9:0"
											}
										]
									},
									"functionSelector": "ea70a017",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "idelete",
									"nameLocation": "421:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:0:0"
									},
									"scope": 62,
									"src": "412:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 63,
							"src": "58:404:0",
							"usedErrors": []
						}
					],
					"src": "32:430:0"
				},
				"id": 0
			}
		}
	}
}